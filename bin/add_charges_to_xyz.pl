#!/usr/bin/perl
#
# This script combines with "remove_frag_esp_from_cube.pl" to enable fitting of
# only one part of a molecule, such as a sidechain, while fixing the remaining
# charges to their initial values. This is achieved by initially removing the
# charges and their associated ESP from the reference ESP data using 
# "remove_frag_esp_from_cube.pl", then after fitting the current script is used
# to add the deleted charges to the newly fitted model.

use strict;

my $b2a=1.8897259886;

if(@ARGV+0 != 4){ die "usage: add_charges_to_xyz.pl <model.xyz> <charges.txt> <coords.cube> <atm1,atm2,...,atmn>\n"; }

my $xyzfile=$ARGV[0];
my $cgfile=$ARGV[1];
my $dcufile=$ARGV[2];
my @frz=split(/,/,$ARGV[3]);

my @qq;
my @typ;
my $totq=0;

# read charges from file (col1=label, col2=charge)
open(CF,"<$cgfile");
while(<CF>){
  chomp;
  my @a=split;
  if(@a+0==2){ 
    push(@qq,$a[1]); 
    push(@typ,$a[0]);
  }
}
close(CF);

my $l=0;
my @xq;
my @yq;
my @zq;
my $natm=0;

open(CIN,"<$dcufile");
open(ONUC,">atom_coords.xyz");
while(<CIN>){
  chomp;
  my $line=$_;
  my @a=split;
  $l++;

  if($l==3){ # no. atoms, global origin
    $natm=$a[0];
    if($natm != @qq+0){die "Error: no. of atoms in cube does not match charges file!\n";}
    print ONUC "$natm\nxyz file containing nuclear coordinates\n";
  }
  if($l>6 && $l<=6+$natm){ #nuclear coords
    push(@xq,$a[2]);
    push(@yq,$a[3]);
    push(@zq,$a[4]);
    printf ONUC " %s  %10.6f  %10.6f  %10.6f\n",$typ[$l-7],$a[2]/$b2a,$a[3]/$b2a,$a[4]/$b2a;
  }
  if($l>6+$natm){ last; }
}
close(CIN);
close(ONUC);

open(XYZ,"<$xyzfile");
open(OXYZ,">combined.xyz");
$l=0;
my $tnq=0;
while(<XYZ>){
  chomp;
  my @a=split();
  my $line=$_;
  $l++;
  
  if($l==1){ 
    $tnq=$a[0];
    my $nq=@frz+$tnq;
    print OXYZ "$nq\n";
  }elsif($l==2){
    print OXYZ "$line\n";
    for(my $n=0; $n<@frz+0; $n++){
      my $lab="N";
      if($qq[$frz[$n]-1]<0){$lab="O";}
      $totq+=$qq[$frz[$n]-1];
      printf OXYZ ("$lab     %21.16f     %21.16f     %21.16f     %21.16f\n",$xq[$frz[$n]-1]/$b2a,$yq[$frz[$n]-1]/$b2a,$zq[$frz[$n]-1]/$b2a,$qq[$frz[$n]-1]);
    }
  }elsif($l>2 && $l<=2+$tnq){
    $totq+=$a[4];
    print OXYZ "$line\n";
  }
}
print OXYZ "\nThis file was generated by add_charges_to_xyz.pl by combining MDCM charges from:\n";
print OXYZ "$xyzfile\n";
print OXYZ "with charges at nuclear positions from:\n";
print OXYZ "$dcufile and $cgfile\n";
print OXYZ "Total charge: $totq\n";

close(OXYZ);

